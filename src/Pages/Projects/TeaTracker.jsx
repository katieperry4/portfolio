import { useContext } from "react";
import { ThemeContext } from "../../Context/theme";
import {
  
  TTTHome,
  TTTReports,
  TTTAdd,
  TTTDash,
  TTTClass
} from "../../assets/work/";
import { Link } from "react-router-dom";
import { Arrow } from "../../components";

const TeaTracker = () => {
  const { dark } = useContext(ThemeContext);
  return (
    <>
      <Arrow />
      <div className="flex">
        {/* sidebar */}
        <div className="fixed hidden md:block">
          <button
            onClick={() => history.back()}
            className={`btn ${
              dark
                ? "bg-violet hover:bg-light-red"
                : "bg-tea-green hover:bg-light-red"
            }`}
          >
            Back
          </button>
        </div>
        {/* main content */}
        <div className="md:mx-12">
          <div className="flex flex-col items-center lg:flex-row py-20 md:mx-32">
            {/* text */}
            <div className="w-full">
              <h1 className="work-header underline">Teatime Tracker</h1>
              <p className="w-4/5 pl-6">
                I&apos;m a diehard tea lover. I drink a TON of tea; maybe too much sometimes.
                I am aware that I drink a lot of tea, but it would be nice to know exactly just how much.
                That is why I made this application! I wanted an answer to my ever-present tea question.
                <br></br>
                <br></br>
                I wrote this app in Visual Studio using ASP.NET Core MVC, Identity, and SQLServer Express. It's published using Azure AppService, Azure SQL Database, and Azure SQL Server.
                <br></br>
                <br></br>
                The tracker needed some core functionalities; CRUD actions, reports, statistics, and recommendations.
                With those in mind, I started planning, writing, and deploying the app. Feel free to have a look at my
                code in my GitHub repository as well as some insight into my process below.
              </p>
              <Link
                to="https://github.com/katieperry4/TeatimeTracker"
                target="_blank"
              >
                <button
                  className={`btn ${
                    dark
                      ? "bg-violet hover:bg-light-red"
                      : "bg-tea-green hover:bg-light-red"
                  }`}
                >
                  GitHub
                </button>
              </Link>
            </div>
            <div className="self-center hidden sm:block">
              <img
                className="w-full"
                src={TTTHome}
                alt="Screenshot of the homepage of Teatime Tracker"
              />
            </div>
          </div>
          
          {/* pictures */}
          <div className="flex flex-col items-center justify-center py-12 gap-12 md:gap-24">
            {/* branding and UX*/}
            <h3 className="work-subheader">Class Diagram</h3>
            {/* branding */}
            <div className="flex flex-col items-center md:items-start md:flex-row gap-4 justify-center">
              <p className="w-1/2 md:w-1/3">
              This is a class diagram depicting the core flow of information and logic throughout the Teatime Tracker application. 
              The yellow boxes represent the main models/database tables. 
              Note: the identity user contains more fields and is auto-generated by AspNetCore Identity. 
              The blue boxes are interfaces and the orange boxes are services that implement those interfaces. 
              The red box is my main controller, “DashboardController”. 
              It requires many services and manages control between the view and the data.
              </p>
              <img
                className="w-1/3 rounded"
                src={TTTClass}
                alt="Class diagram showing basic format of Teatime Tracker."
              />
            </div>
            
            {/* wireframe */}
            <h3 className="work-subheader">Main Visuals</h3>
            <div className="flex flex-col items-center md:items-start md:flex-row gap-4 justify-center">
              <p className="w-1/2 md:w-1/3">
                Here is part of the homepage of the application. Showing the Register/Login functions
                and the main navigation menu. 
              </p>
              <img
                className="w-1/2 rounded"
                src={TTTHome}
                alt="Teatime tracker homepage"
              />
            </div>
            <div className="flex flex-col items-center md:items-start md:flex-row gap-4 justify-center">
              <p className="w-1/2 md:w-1/3">
                This is the top part of the dashboard which is the heart of the application.
                From this page the users can quickly see their main statistics and add/edit cups of tea.
                Further down the page is a recommendation section that recommends the user&apos;s next cup of
                tea depending on the time and their caffeine intake. Finally at the bottom there is the reports section.
              </p>
              <img
                className="w-1/2 rounded"
                src={TTTDash}
                alt="Teatime tracker dashboard"
              />
            </div>
            <div className="flex flex-col items-center md:items-start md:flex-row gap-4 justify-center">
              <p className="w-1/2 md:w-1/3">
                The reports section is lower down on the dashboard page. As of writing this there are three reports
                available to generate; cups per day, caffeine per day, and number of cups by type. Shown here is an example
                of the caffeine per day report.
              </p>
              <img
                className="w-1/2 rounded"
                src={TTTReports}
                alt="Teatime tracker reports section"
              />
            </div>
            <div className="flex flex-col items-center md:items-start md:flex-row gap-4 justify-center">
              <p className="w-1/2 md:w-1/3">
                This page allows the user to add a cup of tea. First they select a type of tea from the database-populated
                list (black, green, herbal), once their selection is made the variety list populates with varieties of teas
                from the selected type. Then the user enters the date they had that cup of tea and hits save.
                <br></br>
                <br></br>
                The edit page is very similar, first the user enters the date of the cup they want to edit and the
                page produces a list of teas from that day (very similar looking to the reports list). The user then clicks
                the cup and the edit page pre-populates the dropdowns which the user can then edit.
              </p>
              <img
                className="w-1/2 rounded"
                src={TTTAdd}
                alt="Teatime tracker add page"
              />
            </div>
         
            <Link
              to="https://github.com/katieperry4/TeatimeTracker"
              target="_blank"
            >
              <button
                className={`btn ${
                  dark
                    ? "bg-violet hover:bg-light-red"
                    : "bg-tea-green hover:bg-light-red"
                }`}
              >
                GitHub
              </button>
            </Link>
          </div>
        </div>
      </div>
    </>
  );
};

export default TeaTracker;